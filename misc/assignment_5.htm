<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Assignment 5</title>
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta name="Microsoft Theme" content="chlkbord 000, default">
<meta name="Microsoft Border" content="tl, default">
</head>

<body bgcolor="#000000" text="#FFFFFF" link="#999999" vlink="#CCCCCC" alink="#666666"><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td><!--mstheme--><font face="Arial, Arial, Helvetica">

<p align="center"><font size="6"><strong><img src="_derived/assignment_5.htm_cmp_chlkbord000_bnr.gif" width="600" height="60" border="0" alt="Assignment 5"></strong></font><br>
<a href="index.htm"><img src="_derived/home_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Home" align="middle"></a> <a href="assignments.htm"><img src="_derived/up_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Up" align="middle"></a> <a href="assignment_1.htm"><img src="_derived/assignment_1.htm_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Assignment 1" align="middle"></a> <a href="assignment_2.htm"><img src="_derived/assignment_2.htm_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Assignment 2" align="middle"></a> <a href="assignment_3.htm"><img src="_derived/assignment_3.htm_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Assignment 3" align="middle"></a> <a href="assignment_4.htm"><img src="_derived/assignment_4.htm_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Assignment 4" align="middle"></a> <img src="_derived/assignment_5.htm_cmp_chlkbord000_hbtn_p.gif" width="140" height="40" border="0" alt="Assignment 5" align="middle"> <a href="assignment_6.htm"><img src="_derived/assignment_6.htm_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Assignment 6" align="middle"></a> <a href="assignment_7.htm"><img src="_derived/assignment_7.htm_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Assignment 7" align="middle"></a> <a href="term_project.htm"><img src="_derived/term_project.htm_cmp_chlkbord000_hbtn.gif" width="140" height="40" border="0" alt="Term Project" align="middle"></a></p>
<p align="center">&nbsp;</p>

<!--mstheme--></font></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top" width="1%"><!--mstheme--><font face="Arial, Arial, Helvetica">



<!--mstheme--></font></td><td valign="top" width="24"></td><!--msnavigation--><td valign="top"><!--mstheme--><font face="Arial, Arial, Helvetica">
<h3>Adding Some New Geometry</h3>
<p>On to the
third big challenge in 3D computer generated imagery - what do we make a picture
of?&nbsp;</p>
<p>In class we talked a little bit about the 3D transformations.&nbsp; Key
concepts are:</p>
<!--mstheme--></font><!--msthemelist--><table border="0" cellpadding="0" cellspacing="0" width="100%">
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="_themes/chlkbord/chabul1c.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="Arial, Arial, Helvetica">We can use transformations to move objects in world space.<!--mstheme--></font><!--msthemelist--></td></tr>
  <!--msthemelist--><tr><td valign="baseline" width="42"><img src="_themes/chlkbord/chabul1c.gif" width="15" height="15" hspace="13"></td><td valign="top" width="100%"><!--mstheme--><font face="Arial, Arial, Helvetica">We can transform rays (points and direction vectors) so we can do
    intersections in other spaces.<!--mstheme--></font><!--msthemelist--></td></tr>
<!--msthemelist--></table><!--mstheme--><font face="Arial, Arial, Helvetica">
<p>What this means is that we can define objects in an <i>object coordinate
system</i> (object space) that is attached to the object and use a
transformation to position that object in the <i>world coordinate system</i>
(world space).&nbsp; And secondly, that we can use the inverse transformation to
take a vector in world space, and transform it into object space where it is
easier to do the intersection with the object.&nbsp; Once we've done the
intersection, we can transform the intersection back into world space to do the
illumination calculation.</p>
<p>The assignment4 download and associated rtobjects library have been modified
so that objects are defined in local space and a transformation is used to
locate them in world space.&nbsp; You will notice that the sphere intersection
is simplified because the sphere is always centered at 0,0,0 in object space.</p>
<p>In this assignment, we focus on quadrics.&nbsp; This is a pretty general
class of objects that have nice curvature and make really nice pictures.&nbsp;
If we combine quadrics with arbitrary cutting planes, we get a pretty
interesting collection of objects.&nbsp; The assignment is to implement one new
object - we will all share objects after the next class, and that should let us
build some interesting environments.&nbsp; I'd like to get to a point where we
have some student work posted on this site --- you are all doing some pretty great
stuff.</p>
<h3>Understanding Quadrics</h3>
<p>Let's start with the basic formula for a quadric:</p>
<p align="center">q<sub>1</sub>x<sup>2</sup> + q<sub>2</sub>y<sup>2</sup> + q<sub>3</sub>z<sup>2</sup>
+ q<sub>4</sub>xy + q<sub>5</sub>yz + q<sub>6</sub>zx + q<sub>7</sub>x + q<sub>8</sub>y
+ q<sub>9</sub>z +q<sub>0</sub> = 0</p>
<p>The various quadrics are determined by the q coefficients.&nbsp; For example
q<sub>1</sub>, q<sub>2</sub>, and q<sub>3</sub> equal 1/r<sup>2</sup> and q<sub>0</sub>
= -1 for a sphere of radius r.&nbsp; All the other coefficients are 0.&nbsp; We
intersect a ray starting at point (x<sub>o</sub>,y<sub>o</sub>,z<sub>o</sub>)
and extending in direction (i,j,k) the points along which are expressed as (x<sub>t</sub>,y<sub>t</sub>,x<sub>t</sub>)
= (x<sub>o</sub>,y<sub>o</sub>,z<sub>o</sub>) + t(i,j,k) where t is the distance
from the origin of the ray (our standard parametric representation of a ray) by
doing a bunch of algebraic gymnastics until we can express the combined
equations as:</p>
<blockquote>
  <p>t<sup>2</sup>(q<sub>1</sub>i<sup>2</sup> + q<sub>2</sub>j<sup>2</sup> + q<sub>3</sub>k<sup>2</sup>
  + q<sub>4</sub> ij + q<sub>5</sub>jk + q<sub>6</sub>ki) +</p>
  <p>&nbsp;t(2(q<sub>1</sub>x<sub>o</sub>i + q<sub>2</sub>y<sub>o</sub>j + q<sub>3</sub>z<sub>o</sub>k)+
  q<sub>4</sub>(x<sub>o</sub>j + y<sub>o</sub>i) + q<sub>5</sub>(y<sub>o</sub>k
  + z<sub>o</sub>j) + q<sub>6</sub>(z<sub>o</sub>i + x<sub>o</sub>k) + q<sub>7</sub>i
  + q<sub>8</sub>j + q<sub>9</sub>k) +</p>
  <p>(q<sub>1</sub>x<sub>o</sub><sup>2</sup> + q<sub>2</sub>y<sub>o</sub><sup>2</sup>
  + q<sub>3</sub>z<sub>o</sub><sup>2</sup> + q<sub>4</sub> x<sub>o</sub>y<sub>o</sub>+
  q<sub>5</sub>y<sub>o</sub>z<sub>o</sub> + q<sub>6</sub>z<sub>o</sub>x<sub>o</sub>
  + q<sub>7</sub>x<sub>o</sub> + q<sub>8</sub>y<sub>o</sub> + q<sub>9</sub>z<sub>o</sub>
  + q<sub>0</sub>) = 0</p>
</blockquote>
<p>or, put another way:</p>
<blockquote>
  <p align="left">at2 + bt + c = 0&nbsp;</p>
</blockquote>
<p>where</p>
<blockquote>
  <p>a = q<sub>1</sub>i<sup>2</sup> + q<sub>2</sub>j<sup>2</sup> + q<sub>3</sub>k<sup>2</sup>
  + q<sub>4</sub> ij + q<sub>5</sub>jk + q<sub>6</sub>ki</p>
  <p>b = 2(q<sub>1</sub>x<sub>o</sub>i + q<sub>2</sub>y<sub>o</sub>j + q<sub>3</sub>z<sub>o</sub>k)+
  q<sub>4</sub>(x<sub>o</sub>j + y<sub>o</sub>i) + q<sub>5</sub>(y<sub>o</sub>k
  + z<sub>o</sub>j) + q<sub>6</sub>(z<sub>o</sub>i + x<sub>o</sub>k) + q<sub>7</sub>i
  + q<sub>8</sub>j + q<sub>9</sub>k</p>
  <p>c = q<sub>1</sub>x<sub>o</sub><sup>2</sup> + q<sub>2</sub>y<sub>o</sub><sup>2</sup>
  + q<sub>3</sub>z<sub>o</sub><sup>2</sup> + q<sub>4</sub> x<sub>o</sub>y<sub>o</sub>+
  q<sub>5</sub>y<sub>o</sub>z<sub>o</sub> + q<sub>6</sub>z<sub>o</sub>x<sub>o</sub>
  + q<sub>7</sub>x<sub>o</sub> + q<sub>8</sub>y<sub>o</sub> + q<sub>9</sub>z<sub>o</sub>
  + q<sub>0</sub></p>
</blockquote>
<p>and we can use the quadratic formula to find the roots for t.&nbsp;&nbsp; To
find the normal at a point on the surface, we can take the partials of the
formula and express the normal (i<sub>n</sub>,,j<sub>n</sub>,k<sub>n</sub>) as:</p>
<blockquote>
  <p>u = 2q<sub>1</sub>x + q<sub>4</sub>y + q<sub>6</sub>z + q<sub>7</sub>&nbsp;</p>
  <p>v = 2q<sub>2</sub>y + q<sub>4</sub>x + q<sub>5</sub>z + q<sub>8</sub></p>
  <p>w = 2q<sub>3</sub>z + q<sub>5</sub>y + q<sub>6</sub>x + q<sub>9</sub></p>
  <p>i<sub>n</sub> = u / sqrt(u<sup>2</sup> + v<sup>2</sup> + w<sup>2</sup>)
  ;&nbsp; j<sub>n</sub> = v / sqrt(u<sup>2</sup> + v<sup>2</sup> + w<sup>2</sup>)
  ;&nbsp; k<sub>n</sub> = w / sqrt(u<sup>2</sup> + v<sup>2</sup> + w<sup>2</sup>)</p>
</blockquote>
<h3>Quadric Shapes</h3>
<blockquote>
  <p>Elliptical Cylinder about y:&nbsp;&nbsp; q<sub>1</sub> = 1/r<sub>x</sub><sup>2</sup>
  ;&nbsp;&nbsp; q<sub>3</sub> = 1/r<sub>z</sub><sup>2</sup> ;&nbsp;&nbsp; q<sub>0</sub>
  = -1</p>
  <p>Ellipsoid:&nbsp; q<sub>1</sub> = 1/r<sub>x</sub><sup>2</sup> ;&nbsp;&nbsp;
  q<sub>2</sub> = 1/r<sub>y</sub><sup>2</sup> ;&nbsp;&nbsp; q<sub>3</sub> = 1/r<sub>z</sub><sup>2</sup>
  ;&nbsp;&nbsp; q<sub>0</sub> = -1</p>
  <p>Elliptic Paraboloid about y:&nbsp;&nbsp;&nbsp; q<sub>1</sub> = 1/r<sub>x</sub><sup>2</sup>
  ;&nbsp;&nbsp; q<sub>3</sub> = 1/r<sub>z</sub><sup>2</sup> ;&nbsp;&nbsp; q<sub>8</sub>
  = -1/r<sub>y</sub></p>
  <p>Elliptic Cone:&nbsp;&nbsp;&nbsp; q<sub>1</sub> = 1/r<sub>x</sub><sup>2</sup>
  ;&nbsp;&nbsp; q<sub>2</sub> = -1/r<sub>y</sub><sup>2</sup> ;&nbsp;&nbsp; q<sub>3</sub>
  = 1/r<sub>z</sub><sup>2</sup> ;</p>
<p>Hyperboloid:&nbsp;&nbsp;&nbsp; q<sub>1</sub> = 1/r<sub>x</sub><sup>2</sup>
;&nbsp;&nbsp; q<sub>2</sub> = -1/r<sub>y</sub><sup>2</sup> ;&nbsp;&nbsp; q<sub>3</sub>
= 1/r<sub>z</sub><sup>2</sup> ;&nbsp;&nbsp; q<sub>0</sub> = -1</p>
  <p>Hyperbolic Paraboloid:&nbsp;&nbsp;&nbsp; q<sub>1</sub> = 1/r<sub>x</sub><sup>2</sup>
  ;&nbsp;&nbsp; q<sub>3</sub> = -1/r<sub>z</sub><sup>2</sup> ;&nbsp;&nbsp;&nbsp;
  q<sub>8</sub> = -1/r<sub>y</sub></p>
</blockquote>
<p>&nbsp;</p>
<p align="center"><img border="0" src="assign5a.jpg" width="628" height="582"></p>
<h3>The Assignment</h3>
<p>What I want each of you to do is implement a new object for us all to use in
ray tracing.&nbsp; There objects will become part of the rtobjects library so
they are available to us all.&nbsp; In the spirit of the rest of the software
for this course, consider this work you do to be shareware and put some
appropriate copyright/sharing notice on it and I will retain this when we fold
together the new and improved rtobjects library.&nbsp; I've added arbitrary
cutting planes to the sphere and cylinder objects.&nbsp; Allow arbitrary cutting
planes to control the shape of your objects.&nbsp; The newly posted rtobjects
library includes a second constructor for the cylinder and sphere that allow the
specification of the cutting planes.</p>
<p>I've suggested some
objects in class, and have had some reservations for some of the objects.&nbsp;
Here's the list I have so far:</p>
  <blockquote>
    <p><b>elliptical cylinder</b> - I've done this, it's in the library.</p>
    <p><b>ellipsoid</b> - Dan Guar </p>
    <p><b>elliptical cone</b> - Johua Gerth </p>
    <p><b>hyperboloid</b> - Jonathan Gitlin - I just noticed that the
    hyperboloid is not a convex object.&nbsp; This is actually good because it
    means we will need to think about the problems of non-convex.&nbsp; You can
    treat it as convex for now. </p>
    <p><b>elliptic paraboloid</b> - Beeman Strong </p>
    <p><b>lens</b> - Thomas Cronin </p>
    <p><b>hyperbolic paraboloid</b> -&nbsp;Takao Oshita </p>
    <p><b>box object</b> - Travis Brooks </p>
  </blockquote>
<p>Derive your object from the base class (sorry Java guys, you need to get
  together to build your rtobjects package and implement the base class), and
  use it in an image.&nbsp; After you submit your assignment, I'll roll the
  objects into the rtobjects library so they are all available for future
  assignments.</p>
<p>Make an image that you would like to have posted on this website, and send
this to me with your object.&nbsp; NOTE: if you get your object to me early,
I'll fold it into the rtobjects library and repost it so we all have more
objects to work with.</p>
<h3>Getting Ready for Distributed Ray-Tracing</h3>
<p>If you have a chance, try implementing super-sampling, either 4 or 9 samples
per pixel for antialiasing.&nbsp; What's important here is getting your
infrastructure to do extra rays per pixel, and to carry a ray ID with the ray
through the process.</p>
&nbsp;
<p>&nbsp;<!--mstheme--></font><!--msnavigation--></td></tr><!--msnavigation--></table></body>

</html>
